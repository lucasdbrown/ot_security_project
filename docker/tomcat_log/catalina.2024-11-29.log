29-Nov-2024 04:43:30.377 WARNING [pool-4-thread-265 - HIGH - BatchWriteBehind{instances size: 1}] org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.reportSlowQuery Slow Query Report SQL=insert pointValues (dataPointId,dataType,pointValue,ts) values (?,?,?,?); time=583576 ms;
29-Nov-2024 05:20:54.714 INFO [Thread-4] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
29-Nov-2024 05:20:54.716 INFO [Thread-4] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
29-Nov-2024 05:20:55.848 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [Serotonin Timer] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/java.lang.Object.wait(Native Method)
 com.serotonin.timer.TimerThread.mainLoop(TimerThread.java:106)
 com.serotonin.timer.TimerThread.run(TimerThread.java:37)
29-Nov-2024 05:20:55.849 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-5-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.849 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-5-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.850 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-5-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.850 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-5-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.LinkedBlockingQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.851 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-4-thread-331] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.851 WARNING [Thread-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [Scada-LTS] appears to have started a thread named [pool-4-thread-339] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@11.0.22/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@11.0.22/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
 java.base@11.0.22/java.util.concurrent.SynchronousQueue.poll(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.base@11.0.22/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.base@11.0.22/java.lang.Thread.run(Unknown Source)
29-Nov-2024 05:20:55.862 INFO [Thread-4] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
29-Nov-2024 05:20:55.872 INFO [Thread-4] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
